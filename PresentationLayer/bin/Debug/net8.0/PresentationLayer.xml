<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PresentationLayer</name>
    </assembly>
    <members>
        <member name="M:TiacPraksaP1.Controllers.IdentityController.Login(TiacPraksaP1.DTOs.Login.UserLoginRequest)">
            <summary>
            This method checks if the username exists, then if it does it checks if the password hashes match, if all of these pass the user gets a token 
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.IdentityController.GetToken(System.Collections.Generic.List{System.Security.Claims.Claim})">
            <summary>
            This method generates a jwt that lasts 1 hour
            </summary>
            <param name="authClaims"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.IdentityController.RegisterUser(TiacPraksaP1.DTOs.Post.UserPostRequest,System.String)">
            <summary>
            This method registers a user if his password is valid
            </summary>
            <param name="model"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.IdentityController.RegisterAdmin(TiacPraksaP1.DTOs.Post.UserPostRequest,System.String)">
            <summary>
            This method registers a user if his password is valid
            </summary>
            <param name="model"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.AddProduct(TiacPraksaP1.DTOs.Post.ProductPostRequest)">
            <summary>
            This method first verifies that the product is valid according to the product validator class, if it is valid it is created 
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.GetAllProducts">
            <summary>
            This method gets all the products that the user is assosiated with.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.GetBasicStatistics">
            <summary>
            This method returns a dictionary with the basic statistic info of the product table
            </summary>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.GetMostPopular(System.Nullable{System.Int32})">
            <summary>
            This method returns a list of most popular products, if range is defined it returns with the defined range, if not it returns the default range
            </summary>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            This method returns a product if that product is assinged to the user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.UpdateProduct(System.Int32,TiacPraksaP1.DTOs.Post.ProductPostRequest)">
            <summary>
            This method updates a product if it exists, only admin users can edit products
            </summary>
            <param name="id"></param>
            <param name="UpdatedProduct"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            This method deletes a product if it exists, only admin users can delete
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.UsersController.GetUsers">
            <summary>
            This method returns all the users from the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.UsersController.GetUser(System.String)">
            <summary>
            This method returns a user from the database that has the passed id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.UsersController.UpdateUser(TiacPraksaP1.DTOs.Post.UserPostRequest,System.String)">
            <summary>
            This method updates a user if a user with the passed id exists
            </summary>
            <param name="userPostRequest"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.UsersController.AddUser(TiacPraksaP1.DTOs.Post.UserPostRequest)">
            <summary>
            This method adds a user to the database if it is valid
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:TiacPraksaP1.Controllers.UsersController.DeleteUser(System.String)">
            <summary>
            This method deletes a user with that id from the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PresentationLayer.Controllers.UserProductsController.AddUserProduct(BusinessLogicLayer.DTOs.Post.UserProductPostRequest)">
            <summary>
            This method sends first validates the post request sent, if valid the userProduct is added
            </summary>
            <param name="userProductPostRequest"></param>
            <returns></returns>
        </member>
        <member name="M:PresentationLayer.Controllers.UserProductsController.GetAllUserProducts">
            <summary>
            This method returns all the userProducts in the database
            </summary>
            <returns></returns>
        </member>
        <member name="M:PresentationLayer.Controllers.UserProductsController.GetUserProduct(System.Int32)">
            <summary>
            This method returns a specific userProduct from the database
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PresentationLayer.Controllers.UserProductsController.UpdateUserProduct(BusinessLogicLayer.DTOs.Post.UserProductPostRequest,System.Int32)">
            <summary>
            This method updates the specific userProduct with the passed productId, if the request is valid
            </summary>
            <param name="userPostRequest"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PresentationLayer.Controllers.UserProductsController.DeleteUserProduct(System.Int32)">
            <summary>
            This method deletes the passed userProduct from the database that has the passed productId and userId 
            </summary>
            <param name="productId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
